name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
        id: go-setup

      # Explicitly set GOROOT to ensure linter uses correct Go installation
      - name: Configure Go environment
        run: |
          echo "GOROOT=$(go env GOROOT)" >> $GITHUB_ENV
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "PATH=$PATH:$(go env GOPATH)/bin" >> $GITHUB_ENV

      # Cache Go dependencies
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Run benchmarks
        run: go test -bench=. -run=^Benchmark ./...

      # Fixed linter configuration with explicit GOROOT and latest version
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        env:
          GOROOT: ${{ env.GOROOT }}  # Critical for internal package resolution
        with:
          version: latest  # Use latest stable version (v1.58+ as of 2025)
          skip-build-cache: true  # Avoid internal cache issues
          skip-pkg-cache: true

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Configure Go environment
        run: |
          echo "GOROOT=$(go env GOROOT)" >> $GITHUB_ENV
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test with coverage
        run: |
          go test -coverprofile=coverage.out -covermode=atomic -v ./...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html